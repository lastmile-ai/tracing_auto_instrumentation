# Build and publish the python-sdk to pypi.
# This workflow is triggered manually. see https://docs.github.com/en/actions/using-workflows/manually-running-a-workflow
name: Build and Publish Python Package to PyPI

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      bumpPatchVersion:
        description: "Auto-increment patch version and commit changes. (This is broken)"
        required: true
        default: "false"
        type: choice
        options:
          - false
          - true

jobs:
  build-release:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      packages: write
      actions: write # Necessary to cancel workflow executions
      pull-requests: write # Necessary to comment on PRs
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10" # don't know what the impact of this is
      - name: Increment version in pyproject.toml
        if: ${{ github.event.inputs.bumpPatchVersion == 'true' }}
        run: |
          python -c "import re; open('pyproject.toml', 'r+', encoding='utf-8').write(re.sub(r'(version\s*=\s*\"\\d+\\.\\d+\\.)(\\d+)', lambda m: f'{m.group(1)}{int(m.group(2))+1}', open('pyproject.toml').read()))"

      - name: Commit and push changes
        if: ${{ github.event.inputs.bumpPatchVersion == 'true' }}
        run: |
          version=$(python -c "print(next(line.split('=')[1].strip().strip('\"') for line in open('pyproject.toml') if line.startswith('version')))")
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add pyproject.toml
          git commit -m "Increment version to $version"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_WORKFLOW_TOKEN }}
      - name: Build Package
        run: |
          pip install build && python -m build
      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
